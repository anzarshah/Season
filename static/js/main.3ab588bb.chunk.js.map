{"version":3,"sources":["season.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonD","props","lat","month","season","Date","getMonth","className","App","state","errormessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"oMAGMA,G,MAAe,CACnBC,OAAS,CACLC,KAAK,sBACLC,SAAS,OAGXC,OAAQ,CACJF,KAAK,sBACLC,SAAS,eAgDFE,EA1BC,SAACC,GAEb,IAhBeC,EAAIC,EAgBbC,GAhBSF,EAgBUD,EAAMC,KAhBZC,GAgBgB,IAAIE,MAAOC,UAfpC,GAAKH,EAAM,EACVD,EAAI,EAAI,SAAS,SAIjBA,EAAI,EAAI,SAAS,UAQN,EAGCP,EAAaS,GAA7BP,EAHe,EAGfA,KAAKC,EAHU,EAGVA,SAQhB,OAEA,sBAAKS,UAAS,sBAAiBH,GAA/B,UACI,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAMD,IACN,mBAAGU,UAAS,6BAAwBT,EAAxB,eC5CVU,E,4MACNC,MAAO,CAAEP,IAAK,KAAKQ,aAAa,I,kEAKR,IAAD,OAEpBC,OAAOC,UAAUC,YAAYC,oBAC5B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACd,IAAMa,EAASE,OAAOC,cAEjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIC,e,+BAQxC,OAAIC,KAAKZ,MAAMP,MAAQmB,KAAKZ,MAAMC,aAC3B,oCAAM,cAAC,EAAD,CAASR,IAAKmB,KAAKZ,MAAMP,MAA/B,QAIFmB,KAAKZ,MAAMP,KAAOmB,KAAKZ,MAAMC,aACzB,2CAAcW,KAAKZ,MAAMC,aAAzB,OAIH,mD,GA7BQY,IAAMC,WAsCxBC,IAASC,OACL,cAAC,EAAD,IAAOC,SAASC,cAAc,Y","file":"static/js/main.3ab588bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './seasonDisplay.css';\r\n\r\nconst seasonConfig = {\r\n  summer:  {\r\n      text:\"Let's hit the beach\",\r\n      iconName:\"sun\"\r\n\r\n    },\r\n    winter: {\r\n        text:\"burr, its so chilly\",\r\n        iconName:\"snowflake\"\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nconst GetSeason = (lat,month) =>{\r\n    if (month>2 && month<9) {\r\n        return lat>0 ? 'summer':'winter';\r\n    }\r\n\r\n    else{\r\n        return lat>0 ? 'winter':'summer';\r\n    };\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\nconst SeasonD = (props) =>{\r\n    \r\n    const season = GetSeason(props.lat,new Date().getMonth);\r\n    const {text,iconName} =seasonConfig[season]\r\n\r\n\r\n\r\n\r\n\r\n \r\n    \r\nreturn(\r\n\r\n<div className={`textDisplay ${season}`} >\r\n    <i className={`icon-left massive ${iconName} icon`} />\r\n    <h1 >{text}</h1>\r\n    <i className={`icon-right massive ${iconName} icon`} />\r\n    \r\n    </div>\r\n);\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default SeasonD;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonD from './season';\r\n\r\n\r\nclass App extends React.Component{\r\nstate ={ lat: null,errormessage:\"\"};\r\n\r\n \r\n \r\n \r\n   componentDidMount() {\r\n\r\n   window.navigator.geolocation.getCurrentPosition(\r\n    position => this.setState({lat : position.coords.latitude }),\r\n\r\n    err => this.setState({errormessage :err.message})\r\n);\r\n   }\r\n\r\n\r\n \r\n   render() {\r\n\r\n    if (this.state.lat && !this.state.errormessage) {\r\n    return <div> <SeasonD lat={this.state.lat}/> </div>\r\n      \r\n    }\r\n\r\n    if (!this.state.lat && this.state.errormessage) {\r\n      return <div> Error: {this.state.errormessage} </div>\r\n      \r\n    }\r\n\r\n    return<div> Loading!!! </div>\r\n\r\n\r\n    \r\n    \r\n   }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n    <App/>,document.querySelector('#root')\r\n);"],"sourceRoot":""}